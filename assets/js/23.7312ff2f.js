(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{177:function(e,t,n){"use strict";n.r(t);var r=n(0),a=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("示例工程：")]),e._v(" "),n("p",[e._v("👉 "),n("a",{attrs:{href:"https://git.oschina.net/baomidou/mybatisplus-spring-boot",target:"_blank",rel:"noopener noreferrer"}},[e._v("mybatisplus-spring-boot"),n("OutboundLink")],1)]),e._v(" "),e._m(2),e._m(3),e._v(" "),e._m(4)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"多租户-sql-解析器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多租户-sql-解析器","aria-hidden":"true"}},[this._v("#")]),this._v(" 多租户 SQL 解析器")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("这里配合 分页拦截器 使用， spring boot 例子配置如下：")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('@Bean\npublic PaginationInterceptor paginationInterceptor() {\n    PaginationInterceptor paginationInterceptor = new PaginationInterceptor();\n    paginationInterceptor.setLocalPage(true);// 开启 PageHelper 的支持\n    /*\n     * 【测试多租户】 SQL 解析处理拦截器<br>\n     * 这里固定写成住户 1 实际情况你可以从cookie读取，因此数据看不到 【 麻花藤 】 这条记录（ 注意观察 SQL ）<br>\n     */\n    List<ISqlParser> sqlParserList = new ArrayList<>();\n    TenantSqlParser tenantSqlParser = new TenantSqlParser();\n    tenantSqlParser.setTenantHandler(new TenantHandler() {\n        @Override\n        public Expression getTenantId() {\n            return new LongValue(1L);\n        }\n\n        @Override\n        public String getTenantIdColumn() {\n            return "tenant_id";\n        }\n\n        @Override\n        public boolean doTableFilter(String tableName) {\n            // 这里可以判断是否过滤表\n            /*\n            if ("user".equals(tableName)) {\n                return true;\n            }*/\n            return false;\n        }\n    });\n    sqlParserList.add(tenantSqlParser);\n    paginationInterceptor.setSqlParserList(sqlParserList);\n    paginationInterceptor.setSqlParserFilter(new ISqlParserFilter() {\n        @Override\n        public boolean doFilter(MetaObject metaObject) {\n            MappedStatement ms = PluginUtils.getMappedStatement(metaObject);\n            // 过滤自定义查询此时无租户信息约束【 麻花藤 】出现\n            if ("com.baomidou.springboot.mapper.UserMapper.selectListBySQL".equals(ms.getId())) {\n                return true;\n            }\n            return false;\n        }\n    });\n    return paginationInterceptor;\n}\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("相关 SQL 解析如多租户可通过 "),t("code",[this._v("@SqlParser(filter=true)")]),this._v(" 排除 SQL 解析，注意！！全局配置 sqlParserCache 设置为 true 才生效。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("# 开启 SQL 解析缓存注解生效\nmybatis-plus:\n    global-config:\n        sql-parser-cache: true\n")])])])}],!1,null,null,null);a.options.__file="tenant.md";t.default=a.exports}}]);